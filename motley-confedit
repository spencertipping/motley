#!/bin/bash
# Motley config file editing interface
motley_defmodule confedit <<'EOF'
Config file editing
A set of functions used by other motley modules to edit dotfiles. This
interface is safer than doing it otherwise, as it makes sure the dotfiles have
"generated by motley" markers before changing them.

Here's an example motley command that uses this interface to echo each machine
it encounters from your ~/.bashrc:

  motley_defcommand echo <<'EOF'
  This is a useless and horrible command
  EOF
  motley_conf_echo_init() {
    motley_confedit motley_echo_bashrc ~/.bashrc
  }
  motley_conf_other_echo() {
    local machine_key=$1
    echo "echo $machine_key" >> $motley_echo_bashrc
  }
  motley_conf_echo_end() {
    motley_confedit_commit motley_echo_bashrc
  }

After this, you could write a Motfile containing something like this:

  machine foo
  foo echo

This would result in the following being added to ~/.bashrc:

  echo foo
EOF

# Documentation for the error message below
motley_defmodule templates <<'EOF'
Confedit templates
Anytime you want motley to edit a file that exists somewhere on disk, like your
~/.bashrc, you need to do a few things to convince motley that it's actually ok
do to this:

1. mv ~/.bashrc ~/.bashrc.motley                # create the template
2. echo "# MOTLEYGEN" >> ~/.bashrc.motley       # add an "ok to modify" tag

If you skip either step, motley will refuse to modify anything and will print
an error message leading you here. Note that this only needs to be done once.
EOF

motley_confedit() {
  local var=$1
  local file=$2

  # Look for a template file and make sure the original contains the "generated
  # by motley" marker.
  if ! [[ -r "$file.motley" ]]; then
    echo "motley: attempted a configuration file edit on $file," >&2
    echo "        but $file.motley (the template) doesn't exist" >&2
    echo "        (run motley -h templates for info about this)" >&2
    exit 1
  fi

  if [[ -r "$file" ]] && ! grep "MOTLEYGEN" "$file" > /dev/null; then
    echo "motley: attempted a configuration file edit on $file,"   >&2
    echo "        but it doesn't appear to have been generated by" >&2
    echo "        motley -- cowardly refusing to change anything"  >&2
    echo "        (run motley -h templates for info about this)"   >&2
    exit 1
  fi

  eval "$var=\$(mktemp \"\$file.XXXXXXXX\")"
  eval "cp \"\$file.motley\" \"\$$var\""
}

motley_confedit_commit() {
  local var=$1
  eval "local tempfile=\$$var"
  mv "$tempfile" "${tempfile:0:$((${#tempfile} - 9))}"
}
